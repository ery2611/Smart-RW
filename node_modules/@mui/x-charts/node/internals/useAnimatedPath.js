"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAnimatedPath = void 0;
var React = _interopRequireWildcard(require("react"));
var _d3Interpolate = require("@mui/x-charts-vendor/d3-interpolate");
var _web = require("@react-spring/web");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function usePrevious(value) {
  const ref = React.useRef({
    currentPath: value,
    previousPath: undefined
  });
  if (ref.current.currentPath !== value) {
    ref.current = {
      currentPath: value,
      previousPath: ref.current.currentPath
    };
  }
  return ref.current;
}
const useAnimatedPath = (path, skipAnimation) => {
  const memoryRef = usePrevious(path);
  const interpolator = React.useMemo(() => memoryRef.previousPath ? (0, _d3Interpolate.interpolateString)(memoryRef.previousPath, memoryRef.currentPath) : () => memoryRef.currentPath, [memoryRef.currentPath, memoryRef.previousPath]);
  const [{
    value
  }] = (0, _web.useSpring)({
    from: {
      value: 0
    },
    to: {
      value: 1
    },
    reset: true,
    immediate: skipAnimation
  }, [memoryRef.currentPath]);
  return value.to(interpolator);
};
exports.useAnimatedPath = useAnimatedPath;